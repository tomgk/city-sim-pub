package org.exolin.citysim.ui;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileFilter;
import org.exolin.citysim.model.World;
import org.exolin.citysim.storage.WorldStorage;
import org.exolin.citysim.utils.Utils;

/**
 *
 * @author Thomas
 */
public class GameControlPanel extends javax.swing.JPanel
{
    private GamePanel panel;
    private final JFileChooser fileChooser = new JFileChooser(new File("./saves"));
    {
        fileChooser.setFileFilter(new FileFilter()
        {
            @Override
            public String getDescription()
            {
                return "Save files (*.cs)";
            }

            @Override
            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return true;
                } else {
                    String filename = f.getName().toLowerCase();
                    return filename.endsWith(".cs");
                }
            }
         });
    }
    
    private final Map<JLabel, Integer> speeds = new LinkedHashMap<>();
    
    /**
     * Creates new form GameData
     */
    public GameControlPanel()
    {
        initComponents();
        
        speeds.put(pauseLabel, 0);
        speeds.put(speed1Label, 1);
        speeds.put(speed2Label, 3);
        speeds.put(speed3Label, 9);
        speeds.put(speed4Label, 27);
        speeds.put(speed5Label, 81);
        
        selectSpeedLabel(speed1Label);
    }

    public void setPanel(GamePanel panel)
    {
        this.panel = panel;
    }

    public void setKeyMapping(KeyMapping mapping)
    {
        String html = mapping.getHTML();
        Font f = keyMappingLabel.getFont();
        f = f.deriveFont(Font.PLAIN);
        keyMappingLabel.setFont(f);
        keyMappingLabel.setText(html);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        javax.swing.JLabel resetPositionLabel = new javax.swing.JLabel();
        javax.swing.JLabel keyLeftLabel = new javax.swing.JLabel();
        javax.swing.JLabel keyTopLabel = new javax.swing.JLabel();
        javax.swing.JLabel keyBottomLabel = new javax.swing.JLabel();
        javax.swing.JLabel keyRightLabel = new javax.swing.JLabel();
        javax.swing.JLabel zoomInLabel = new javax.swing.JLabel();
        javax.swing.JLabel zoomOutLabel = new javax.swing.JLabel();
        javax.swing.JLabel saveLabel = new javax.swing.JLabel();
        javax.swing.JLabel loadLabel = new javax.swing.JLabel();
        keyMappingLabel = new javax.swing.JLabel();
        pauseLabel = new javax.swing.JLabel();
        speed1Label = new javax.swing.JLabel();
        speed2Label = new javax.swing.JLabel();
        speed3Label = new javax.swing.JLabel();
        speed4Label = new javax.swing.JLabel();
        speed5Label = new javax.swing.JLabel();

        resetPositionLabel.setText("Reset position");
        resetPositionLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                resetPositionLabelMouseClicked(evt);
            }
        });

        keyLeftLabel.setText("<");
        keyLeftLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                keyLeftLabelMousePressed(evt);
            }
        });

        keyTopLabel.setText("^");
        keyTopLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                keyTopLabelMousePressed(evt);
            }
        });

        keyBottomLabel.setText("v");
        keyBottomLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                keyBottomLabelMousePressed(evt);
            }
        });

        keyRightLabel.setText(">");
        keyRightLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                keyRightLabelMousePressed(evt);
            }
        });

        zoomInLabel.setText("+");
        zoomInLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                zoomInLabelMousePressed(evt);
            }
        });

        zoomOutLabel.setText("-");
        zoomOutLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                zoomOutLabelMousePressed(evt);
            }
        });

        saveLabel.setText("Save");
        saveLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                saveLabelMouseClicked(evt);
            }
        });

        loadLabel.setText("Load");
        loadLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                loadLabelMouseClicked(evt);
            }
        });

        keyMappingLabel.setText("<keymapping>");

        pauseLabel.setText("||");
        pauseLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                speedLabelClicked(evt);
            }
        });

        speed1Label.setText(">");
        speed1Label.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                speedLabelClicked(evt);
            }
        });

        speed2Label.setText(">>");
        speed2Label.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                speedLabelClicked(evt);
            }
        });

        speed3Label.setText(">>>");
        speed3Label.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                speedLabelClicked(evt);
            }
        });

        speed4Label.setText("x4");
        speed4Label.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                speedLabelClicked(evt);
            }
        });

        speed5Label.setText("x5");
        speed5Label.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                speedLabelClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resetPositionLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pauseLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(speed1Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(speed2Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(speed3Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(speed4Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(speed5Label)))
                .addGap(74, 74, 74)
                .addComponent(keyLeftLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(keyTopLabel)
                    .addComponent(keyBottomLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keyRightLabel)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zoomInLabel)
                    .addComponent(zoomOutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(keyMappingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 277, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(loadLabel)
                    .addComponent(saveLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(saveLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(loadLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(resetPositionLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pauseLabel)
                                    .addComponent(speed1Label)
                                    .addComponent(speed2Label)
                                    .addComponent(speed3Label)
                                    .addComponent(speed4Label)
                                    .addComponent(speed5Label))))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addComponent(keyMappingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(keyTopLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                            .addComponent(keyBottomLabel))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(15, 15, 15)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(keyLeftLabel)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(keyRightLabel)
                                            .addComponent(zoomInLabel))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(zoomOutLabel)))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void resetPositionLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_resetPositionLabelMouseClicked
    {//GEN-HEADEREND:event_resetPositionLabelMouseClicked
        panel.resetPosition();
    }//GEN-LAST:event_resetPositionLabelMouseClicked

    private void keyLeftLabelMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_keyLeftLabelMousePressed
    {//GEN-HEADEREND:event_keyLeftLabelMousePressed
        panel.keyPressed(KeyEvent.VK_LEFT);
    }//GEN-LAST:event_keyLeftLabelMousePressed

    private void keyTopLabelMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_keyTopLabelMousePressed
    {//GEN-HEADEREND:event_keyTopLabelMousePressed
        panel.keyPressed(KeyEvent.VK_UP);
    }//GEN-LAST:event_keyTopLabelMousePressed

    private void keyBottomLabelMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_keyBottomLabelMousePressed
    {//GEN-HEADEREND:event_keyBottomLabelMousePressed
        panel.keyPressed(KeyEvent.VK_DOWN);
    }//GEN-LAST:event_keyBottomLabelMousePressed

    private void keyRightLabelMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_keyRightLabelMousePressed
    {//GEN-HEADEREND:event_keyRightLabelMousePressed
        panel.keyPressed(KeyEvent.VK_RIGHT);
    }//GEN-LAST:event_keyRightLabelMousePressed

    private void zoomInLabelMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_zoomInLabelMousePressed
    {//GEN-HEADEREND:event_zoomInLabelMousePressed
        panel.onZoom(1);
    }//GEN-LAST:event_zoomInLabelMousePressed

    private void zoomOutLabelMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_zoomOutLabelMousePressed
    {//GEN-HEADEREND:event_zoomOutLabelMousePressed
        panel.onZoom(-1);
    }//GEN-LAST:event_zoomOutLabelMousePressed

    private void saveLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_saveLabelMouseClicked
    {//GEN-HEADEREND:event_saveLabelMouseClicked
        Path file = panel.getWorldFile();
        if(file == null)
        {
            if(fileChooser.showSaveDialog(panel) != JFileChooser.APPROVE_OPTION)
                return;
            
            file = fileChooser.getSelectedFile().toPath();
        }
        
        try(OutputStream out = Files.newOutputStream(file))
        {
            WorldStorage.save(panel.getWorld(), file);
        }catch(IOException e){
            ErrorDisplay.show(this, e);
        }
    }//GEN-LAST:event_saveLabelMouseClicked

    private void loadLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_loadLabelMouseClicked
    {//GEN-HEADEREND:event_loadLabelMouseClicked
        if(fileChooser.showOpenDialog(panel) == JFileChooser.APPROVE_OPTION)
        {
            Path p = fileChooser.getSelectedFile().toPath();
            try(InputStream in = Files.newInputStream(p))
            {
                World w = WorldStorage.deserialize(Utils.getFilenameWithoutExt(p), in);
                panel.setWorld(w, p);
            }catch(IOException e){
                ErrorDisplay.show(this, e);
            }
        }
    }//GEN-LAST:event_loadLabelMouseClicked

    private void speedLabelClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_speedLabelClicked
    {//GEN-HEADEREND:event_speedLabelClicked
        JLabel selected = (JLabel)evt.getComponent();
        int tickFactor = selectSpeedLabel(selected);
        panel.setTickFactor(tickFactor);
    }//GEN-LAST:event_speedLabelClicked

    private int selectSpeedLabel(JLabel selected)
    {
        Integer tickFactor = speeds.get(selected);
        if(tickFactor == null)
            throw new NullPointerException();
        
        for(JLabel c : speeds.keySet())
            c.setForeground(Color.black);
        selected.setForeground(Color.red);
        return tickFactor;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel keyMappingLabel;
    private javax.swing.JLabel pauseLabel;
    private javax.swing.JLabel speed1Label;
    private javax.swing.JLabel speed2Label;
    private javax.swing.JLabel speed3Label;
    private javax.swing.JLabel speed4Label;
    private javax.swing.JLabel speed5Label;
    // End of variables declaration//GEN-END:variables
}
