package org.exolin.citysim.ui.sp.powerplant;

import java.awt.Image;
import java.awt.Window;
import java.math.BigDecimal;
import java.util.Objects;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.plaf.basic.BasicButtonUI;

/**
 *
 * @author Thomas
 */
public class PowerPlantSelectorPanel extends javax.swing.JPanel
{
    private final String name;
    private final int buildingCost;
    private final int megaWatt;
    private final BigDecimal maintenance;
    private final Image image;
    
    /**
     * Creates new form PowerPlantSelectorPanel
     * @param megaWatt
     * @param buildingCost
     * @param name
     * @param image
     * @param maintenance
     * @param plantPlacer gets executed when a plant gets selected
     */
    public PowerPlantSelectorPanel(int megaWatt, int buildingCost, String name, Image image, BigDecimal maintenance, Runnable plantPlacer)
    {
        this.name = Objects.requireNonNull(name);
        this.buildingCost = buildingCost;
        this.megaWatt = megaWatt;
        this.maintenance = Objects.requireNonNull(maintenance);
        this.image = Objects.requireNonNull(image);
        
        initComponents();
        plantButton.setText("<html>"+megaWatt+" MW $"+buildingCost+"<br>"+name+"</html>");
        plantButton.setIcon(new ImageIcon(image));
        plantButton.setVerticalTextPosition(SwingConstants.BOTTOM);
        plantButton.setHorizontalTextPosition(SwingConstants.CENTER);
        plantButton.addActionListener(e -> plantPlacer.run());
        
        plantButton.setUI(new BasicButtonUI());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonPanel = new javax.swing.JPanel();
        infoButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        plantButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        setLayout(new java.awt.BorderLayout());

        infoButton.setText("Info");
        infoButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                infoButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(infoButton);

        add(buttonPanel, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        jPanel1.setLayout(new java.awt.BorderLayout());

        plantButton.setText("jButton1");
        jPanel1.add(plantButton, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_infoButtonActionPerformed
    {//GEN-HEADEREND:event_infoButtonActionPerformed
        Window parent = SwingUtilities.getWindowAncestor(this);
        PlantInfoDialog dlg = new PlantInfoDialog(parent, name, buildingCost, megaWatt, maintenance, image);
        dlg.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dlg.setLocationRelativeTo(parent);
        dlg.setVisible(true);
    }//GEN-LAST:event_infoButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton infoButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton plantButton;
    // End of variables declaration//GEN-END:variables
}
